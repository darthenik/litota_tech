---
- hosts: debian
  gather_facts: yes
  become: true
  # vars:
  # ansible_python_interpreter: /usr/bin/python
  tasks:
  - block:
    - apt_key:
        keyserver: hkp://keyserver.ubuntu.com
        id: 7568D9BB55FF9E5287D586017AE645C0CF8E292A
        state: present
    - apt: name={{item}} state=latest
      with_items:
        - gnupg
        - wget
        - python-pip
        - python3-pip
        - default-jdk
        - dirmngr 
        - apt-transport-https 
        - software-properties-common 
        - ca-certificates 
        - curl
 
    - name: Add VPN repository into source list
      apt_repository:
        repo: deb https://repo.pritunl.com/stable/apt buster main
        state: present
        filename: pritunl
    - name: Add mongo keys
      shell: wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -
    - name: Add mongo repo
      shell: sudo add-apt-repository 'deb https://repo.mongodb.org/apt/debian buster/mongodb-org/5.0 main' 
    - apt: 
        update_cache: yes
    - name: Update repos
      apt:
        name: 
        - pritunl
        - mongodb-org
        state: present
    - name: Install mongo module
      pip:
        name: pymongo

    - name: Create local temporary directory for certificates generation
      local_action:
        module: file
        path: /tmp/mongodb-nodecerts
        state: directory
      run_once: true

    - name: Download certificates generation tool
      local_action:
        module: get_url
        url: https://search.maven.org/remotecontent?filepath=com/floragunn/search-guard-tlstool/1.5/search-guard-tlstool-1.5.tar.gz
        dest: /tmp/mongodb-nodecerts/search-guard-tlstool.tar.gz
      run_once: true

    - name: Extract the certificates generation tool
      local_action: command chdir=/tmp/mongodb-nodecerts tar -xvf search-guard-tlstool.tar.gz
      run_once: true

    - name: Make the executable file
      local_action:
        module: file
        dest: /tmp/mongodb-nodecerts/tools/sgtlstool.sh
        mode: a+x
      run_once: true

    - name: Prepare the certificates generation template file
      local_action:
        module: template
        src: ./tlsconfig.yml
        dest: /tmp/mongodb-nodecerts/config/tlsconfig.yml
      run_once: true

    - name: Generate the node & admin certificates in local
      local_action:
        module: command /tmp/mongodb-nodecerts/tools/sgtlstool.sh -c /tmp/mongodb-nodecerts/config/tlsconfig.yml -ca -crt -t /tmp/mongodb-nodecerts/config/
      run_once: true

    - name: Create MongoDB SSL directory
      file:
        path: /etc/mongodb/ssl
        state: directory
        owner: mongodb
        group: mongodb
        mode: 0766

    - name: Copy the node & admin certificates to MongoDB
      copy:
        src: "/tmp/mongodb-nodecerts/config/{{ item }}"
        dest: /etc/mongodb/ssl/
        mode: 0644
        owner: mongodb
        group: mongodb
      with_items:
        - root-ca.pem
        - root-ca.key
        - mongo.key
        - mongo.pem

    - name: Create the mongo certificate pem file
      shell:
        cmd: cat mongo.key mongo.pem > mongo-ssl.pem
        chdir: /etc/mongodb/ssl/

    - name: Set permission for node certificate pem file
      file:
        path: /etc/mongodb/ssl/mongo-ssl.pem
        state: file
        owner: mongodb
        group: mongodb
        mode: 0644

    - name: start and enable mongodb
      systemd:
        name: mongod
        state: started
        enabled: yes 
    - name: set password for admin role
      community.mongodb.mongodb_user:
        database: admin
        name: admin
        password: 12345
        #login_user: admin
        #login_password: 12345
        roles: userAdminAnyDatabase,dbAdminAnyDatabase,readWriteAnyDatabase
        state: present
    - name: create role for pritunl db
      community.mongodb.mongodb_user:
        database: pritunl
        name: pritunl
        password: 12345
        login_user: admin
        login_password: 12345
        roles: dbOwner
        state: present
    - name: Expose mongodb to all netrworks
      shell: "sed -i 's/127.0.0.1/0.0.0.0/' /etc/mongod.conf"
      #- lineinfile:
      # path: /etc/mongod.conf
      # insertafter: 'bindIp: 0.0.0.0'
      # line: "  tls:\n    mode: allowTLS\n    certificateKeyFile: /etc/mongodb/ssl/mongo.pem\n    CAFile: /etc/mongodb/ssl/mongo.pem\n"
    - name: Enable authentification
      shell: "echo 'security:\n  authorization: enabled' >> /etc/mongod.conf"
    - name: restart service mongodb
      systemd:
        name: mongod
        state: restarted
    - name: Set path to mongodb
      shell: pritunl set-mongodb mongodb://pritunl:12345@localhost:27017/pritunl
    - name: Start pritunl
      systemd:
        name: pritunl
        state: started
        enabled: yes
    when: ansible_distribution == "Debian" and ansible_distribution_version == "10"
